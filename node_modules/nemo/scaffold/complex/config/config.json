{
    "plugins": {
        "view": {
            "module": "nemo-view",
            "arguments": [
                "path:locator"
            ]
        }
    },
    "data": {
        "baseUrl": "https://www.google.com"
    },
    "output": {
        "reports": "path:report"
// uncomment if you have an influxdb instance
//        ,"storage": {
//            "server": "localhost",
//            "database": "nemo",
//            "user": "admin",
//            "password": "admin"
//        }
    },
    "profiles": {
        "base": {
            "tests": "path:./*.js",
//            "env": {
//                 these only get set when running in parallel (child processes from main process)
//                "DEBUG": "nemo*"
//            },
            "driver": {
                "browser": "chrome"
// Use the below "builders" pattern to use the selenium-webdriver Builder class:
// see: http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Builder.html
//                "builders": {
//                    "withCapabilities": [
//                        {
//                            "browserName": "chrome",
//                            "chromeOptions": {
//                                "args": [
//                                    "headless",
//                                    "window-size=1200,800"
//                                ]
//                            }
//                        }
//                    ]
//                }
            },
            "mocha": {
                "timeout": 180000,
                "reporter": "mochawesome"
            }
        },
        "xunit": {
            "mocha": {
                "reporter": "xunit",
                "reporterOptions": {
                    "output": "this just tells nemo we want to output files"
                }
            }
        },
        "search": {
            "tests": "path:./search.js",
            "parallel": "data",
            "data": {
                "google": {
                    "baseUrl": "https://www.google.com",
                    "input": "input[name=q]",
                    "button": "input[type=submit][name=btnK]",
                    "result": "#search"
                },
                "yahoo": {
                    "baseUrl": "http://www.yahoo.com",
                    "input": "input[name=p]",
                    "button": "#uh-search-button",
                    "result": "#results"
                },
                "bing": {
                    "baseUrl": "http://www.bing.com",
                    "input": "input[name=q]",
                    "button": "input[name=go]",
                    "result": "#b_results"
                }
            }
        },
        "pay": {
            "tests": "path:./pay.js",
            "parallel": "data",
            "data": {
                "paypal": {
                    "baseUrl": "https://www.paypal.com",
                    "signupButton": "#signup-button",
                    "signupForm": "#cta-btn"
                },
                "square": {
                    "baseUrl": "http://www.squareup.com",
                    "signupButton": "a.button[href*=signup]",
                    "signupForm": "body.signup-page"
                }
            }
        },
        "trivial": {
            "tests": "path:./trivial.js",
            "parallel": "data",
            "data": {
                "amazon": {
                    "baseUrl": "http://www.amazon.com"
                },
                "ebay": {
                    "baseUrl": "http://www.ebay.com"
                },
                "google": {
                    "baseUrl": "http://www.google.com"
                }
            }
        },
        "form": {
            "tests": "path:./form.js",
            "data": {
                "useme": "require:./config/useme",
                "baseUrl": "https://mdn.github.io/learning-area/html/forms/your-first-HTML-form/first-form-styled.html"
            }
        }
    }
}
